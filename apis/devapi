function t(a) --Shortener for type
  return type(a)
end
--Shortened versions of some types for type(thing)
str,bool,func,tbl = "string","boolean","function","table"

function tableIter(tableu,printMode) --This was in a program, but I'm enhancing it
  if t(tableu) ~= tbl then
    error("Expected table, got " .. t(tableu))
  elseif t(printMode) ~= bool then
    error("Expected boolean, got " .. t(printMode))
  end
  --Now for the real thing.
  if printMode == true then
    for i=1,#tableu do
      print(tableu[i]
    end
  elseif printMode == false then
    --Instead of nested fors, I decided to use some variables and a repeat
    on = 1
    lim = #utable
    atable = {}
    repeat
      table.insert(atable,utable[on])
      on=on+1
    until on=lim
    if on==lim then
      return atable
    end  
  end
end
function drawBox(x,y,width,height,color)
    w,h=term.getSize()
    yo = y
    repeat
      paintutils.drawLine(x,yo,1,width,color)
      yo=yo+1
    until yo=height-h
end
function roundNumber(n)
  sn,l = tostring(n),string.len(sn)
  if l == 1 then
    if n < 5 then
      return 0
    else
      return 10
    end
  else
    table,table2,table3,o = {},{},{},""
    for i=1,l do
      a = string.sub(sn,i,i)
      table.insert(table,a)
    end
    for i=1,l do
      a,b = table[i],tonumber(a)
      if b < 5 then
        c = 0
      else
        c = 10
      end
      table.insert(table2,c)
    end
    for i=1,l do
      a,b,c = table2[i],tostring(a),string.sub(b,1,1)
      table.insert(table3,c)
    end
    for i=1,l do
      o = o .. table3[i]
    end
    return tonumber(o)
  end
end  
    
      
      
      
      
      
      
    
      
      
    
    
  
