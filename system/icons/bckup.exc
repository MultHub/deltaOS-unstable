


local function exitServ()
 sleep(0.6)
 paintutils.drawPixel(kernel.x, kernel.y, colors.red)
 term.setCursorPos(kernel.x, kernel.y)
 write("X")
 while true do
 local e, b, x, y = os.pullEvent()
 if event == "mouse_click" and x == kernel.x and y == kernel.y then
  error()
 elseif event == "redraw_x" or event == "rd_x" then
  paintutils.drawPixel(kernel.x, kernel.y, colors.red)
  term.setCursorPos(kernel.x, kernel.y)
  write("X")
 end
end
end


local function main()

graphics.reset(colors.white, colors.black)
print("")
graphics.cPrint("Delta Time Machine")


print("")

paintutils.drawLine(2, 5, kernel.x-1, 5, colors.blue)
paintutils.drawLine(2, 7, kernel.x-1, 7, colors.blue)

term.setCursorPos(1, 5)
graphics.cPrint("Backup")

term.setCursorPos(1, 7)
graphics.cPrint(" Restore")


local function backup()
 local dirs = { }
 local cPos = 1
 
 for _, dir in ipairs(fs.list("/")) do
  if dir ~= "users" and dir ~= "rom" and dir ~= "system" and dir ~= "apps" and dir ~= "apis" and dir ~= "lib" and dir ~= "home" then
   if fs.isDir(dir) then
    table.insert(dirs, dir)
   end
  end
 end
 graphics.reset(colors.white, colors.black)
 print("")
 graphics.cPrint("Delta Time Machine")
 os.queueEvent("rd_x")
 print("")
 print("")
 graphics.cPrint("We have found these directorys: ")
 print("")
 cPos = 6
 if dirs[1] ~= nil then
 for i=1, #dirs do
  cPos = cPos+1
  print(i..". "..dirs[1])
 end
 elseif dirs[1] == nil then
  graphics.cPrint("NO directories found.")
  sleep(1)
  error()
 end
 
 paintutils.drawLine(2, cPos+2, kernel.x-1, cPos+2, colors.gray)
 
 term.setCursorPos(1, cPos+4)
 term.setBackgroundColor(colors.white)
 print("Please enter the number of the directory.")
 
 term.setCursorPos(2, cPos+2)
 term.setBackgroundColor(colors.gray)
 local folder = tonumber(read())
 if dirs[folder] ~= nil then
  shell.run("rm", "/"..dirs[folder].."*")
  fs.copy("/ft-setup.lua", "/"..dirs[folder].."/ft-setup.lua")
  fs.copy("/system", "/"..dirs[folder].."/system")
  fs.copy("/users", "/"..dirs[folder].."/users")
  fs.copy("/apps", "/"..dirs[folder].."/apps")
  fs.copy("/apis", "/"..dirs[folder].."/apis")
  fs.copy("/startup", "/"..dirs[folder].."/startup")
  fs.copy("/home", "/"..dirs[folder].."/home")
  local x = fs.open(dirs[folder].."/.backup", "w")
  x.write("BACKUP MAKRER")
  x.close()
  graphics.reset(colors.white, colors.black)
  term.setCursorPos(1, kernel.y/2)
  os.queueEvent("rd_x")
  graphics.cPrint("Backed up.")
  sleep(0.6)
  graphics.reset(colors.black, colors.white)
  error()
 else
  error()
 end
end




local function restore()
 local cPos = 1
 local dirs = { }
 graphics.reset(colors.white, colors.black)
 print("")
 os.queueEvent("rd_x")
 term.setBackgroundColor(colors.white)
 graphics.cPrint("Delta Time Machine")
 print("")
 for _, file in ipairs( fs.list("/") ) do
  if fs.isDir(file) and fs.exists(file.."/.backup") then
   table.insert(dirs, file)
  end
 end
 
 if #dirs>0 then
  graphics.cPrint("We have found the following backups: ")
  for i=1, #dirs do
   cPos = cPos+1
   graphics.cPrint(i..". "..dirs[i])
  end
  print("")
  graphics.cPrint("Please enter the number of the folder.")
  print("")
  paintutils.drawLine(2, cPos+2, kernel.x, cPos+2, colors.gray)
  term.setCursorPos(2, cPos+2)
  local folder = tonumber( read() )
  if dirs[folder] ~= nil then
   fs.delete("/system")
   fs.delete("/startup")
   fs.delete("/apis")
   fs.delete("/users")
   fs.copy(dirs[folder].."/system", "/system")
   fs.copy(dirs[folder].."/startup", "/startup")
   fs.copy(dirs[folder].."/apis", "/apis")
   fs.copy(dirs[folder].."/users", "/users")
   fs.copy(dirs[folder].."/home", "/home")
   graphics.reset(colors.white, colors.black)
   term.setCursorPos(1, kernel.y/2)
   os.queueEvent("rd_x")
   term.setBackgroundColor(colors.white)
   graphics.cPrint("Restored.")
   sleep(1)
   os.reboot()
  else
   error()
  end
 end
 
end


while true do 
 local e, b, x, y = os.pullEvent("mouse_click")
 if y == 5 then
  backup()
 elseif y == 7 then
  restore()
 end
end



end



parallel.waitForAll(main, exitServ)
